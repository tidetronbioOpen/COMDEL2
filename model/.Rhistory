#绘制环形热图
circos.par(start.degree = 90, gap.after = c(20))  #调整圆环首尾间距，开口朝上
circos.heatmap(data_matrix, col = color_mapping,
dend.side = "inside",
#rownames.side = "outside",
track.height = 0.6,
bg.border = "black",
cluster = FALSE)
# 添加自定义轴线
circos.axis(h = "top", labels.cex = 1.5, major.at = c(1, seq(50, n_rows, by=50)),
minor.ticks = 0, major.tick.length = 0.2,
major.tick.percentage = TRUE)
# 创建一个颜色条图例
lg = Legend(title = "Exp", col_fun = color_mapping,
title_gp = gpar(fontsize = 12, fontface = "bold"),  # 调整标题字体大小和样式
labels_gp = gpar(fontsize = 12),                   # 调整标签字体大小
direction = "vertical",
legend_width = unit(30, "cm"))  # 调整图例宽度
grid.draw(lg)
# 添加列名
circos.track(track.index=get.current.track.index(), panel.fun = function(x, y) {
cn = colnames(data_matrix)
n = length(cn)
for(i in 1:n) {
circos.text(CELL_META$cell.xlim[1], y=i, cn[i], cex=1, adj=c(1,1.5), facing="inside", niceFacing = TRUE)
}
}, bg.border = NA)
circos.clear()
# 关闭PDF设备
dev.off()
library(circlize)
library(RColorBrewer)
library(ComplexHeatmap)
library(gridBase)
# 读取数据
data <- read.csv("COMDEL2_predictions.csv",header=TRUE, row.names= 1,sep=',')
data_matrix <- as.matrix(data)
head(data)
# 移除非数值列
data_matrix <- as.matrix(data[, -c(1)])  #移除seq列
# 逆转行顺序以匹配顺时针方向
rownames(data_matrix) <- rev(rownames(data_matrix))
data_matrix <- data_matrix[nrow(data_matrix):1, ]
head(data_matrix)
# 获取数据矩阵的行数
n_rows <- nrow(data_matrix)
# 自定义颜色梯度
color_mapping <- colorRamp2(c(0, 0.5, 1), c("red", "black", "green"))
# 设置PNG图像设备
#png("predseq_circular_heatmap.png", width = 800, height = 800)
# 设置PDF图像设备
pdf("COMDEL2_circular_heatmap2.pdf", width = 10, height = 10)
#调整圆环首尾间距，开口朝上
circos.par(start.degree = 90, gap.after = c(20))
# 绘制热图
circos.heatmap(data_matrix,col=color_mapping,
dend.side="inside", #聚类放在环形内测,控制行聚类树的方向
track.height = 0.6, #轨道的高度，数值越大圆环越粗
bg.border = "black",#背景边缘颜色
cluster=FALSE) #cluster=TRUE为对行聚类，cluster=FALSE则不显示聚类
# 添加自定义轴线
circos.axis(h = "top", labels.cex = 1.5, major.at = c(1, seq(2, n_rows, by=1)),
minor.ticks = 0, major.tick.length = 0.2,
major.tick.percentage = TRUE)
# 创建一个颜色条图例
lg = Legend(title = "Exp", col_fun = color_mapping,
title_gp = gpar(fontsize = 12, fontface = "bold"),  # 调整标题字体大小和样式
labels_gp = gpar(fontsize = 12),                   # 调整标签字体大小
direction = "vertical",
legend_width = unit(25, "cm"))  # 调整图例宽度
grid.draw(lg)
# 添加列名
circos.track(track.index = get.current.track.index(), panel.fun = function(x, y) {
cn = colnames(data_matrix)
n = length(cn)
for (i in 1:n) {
circos.text(CELL_META$cell.xlim[1], y = i, cn[i], cex = 1, adj = c(1, 1.5), facing = "inside", niceFacing = TRUE)
}
}, bg.border = NA)
circos.clear()
# 关闭PDF设备
dev.off()
library(circlize)
library(RColorBrewer)
library(ComplexHeatmap)
library(gridBase)
# 读取数据
data <- read.csv("COMDEL2_predictions.csv",header=TRUE, row.names= 1,sep=',')
data_matrix <- as.matrix(data)
head(data)
# 移除非数值列
data_matrix <- as.matrix(data[, -c(1)])  #移除seq列
# 逆转行顺序以匹配顺时针方向
rownames(data_matrix) <- rev(rownames(data_matrix))
data_matrix <- data_matrix[nrow(data_matrix):1, ]
head(data_matrix)
# 获取数据矩阵的行数
n_rows <- nrow(data_matrix)
# 自定义颜色梯度
color_mapping <- colorRamp2(c(0, 0.5, 1), c("red", "black", "green"))
# 设置PNG图像设备
#png("predseq_circular_heatmap.png", width = 800, height = 800)
# 设置PDF图像设备
pdf("COMDEL2_circular_heatmap2.pdf", width = 10, height = 10)
#调整圆环首尾间距，开口朝上
circos.par(start.degree = 90, gap.after = c(20))
# 绘制热图
circos.heatmap(data_matrix,col=color_mapping,
dend.side="inside", #聚类放在环形内测,控制行聚类树的方向
track.height = 0.6, #轨道的高度，数值越大圆环越粗
bg.border = "black",#背景边缘颜色
cluster=FALSE) #cluster=TRUE为对行聚类，cluster=FALSE则不显示聚类
# 添加自定义轴线
circos.axis(h = "top", labels.cex = 1.5, major.at = c(1, seq(2, n_rows, by=1)),
minor.ticks = 0, major.tick.length = 0.2,
major.tick.percentage = TRUE)
# 创建一个颜色条图例
lg = Legend(title = "Exp", col_fun = color_mapping,
title_gp = gpar(fontsize = 12, fontface = "bold"),  # 调整标题字体大小和样式
labels_gp = gpar(fontsize = 12),                   # 调整标签字体大小
direction = "vertical",
legend_width = unit(25, "cm"))  # 调整图例宽度
grid.draw(lg)
# 添加列名
circos.track(track.index = get.current.track.index(), panel.fun = function(x, y) {
cn = colnames(data_matrix)
n = length(cn)
sector.index = get.cell.meta.data("sector.index")
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
x_center = mean(xlim)
y_center = mean(ylim)
for (i in 1:n) {
# 计算每个列名的角度位置
angle = circos.info(sector.index, track.index = get.current.track.index())$cell.start.degree +
(i - 0.5) * diff(circos.info(sector.index, track.index = get.current.track.index())$cell.degree.range) / n
# 将文本朝向环形的中心
circos.text(x_center, y_center, labels = cn[i], facing = "clockwise", niceFacing = TRUE, cex = 1, adj = c(0.5, 0.5))
}
}, bg.border = NA)
circos.clear()
# 关闭PDF设备
dev.off()
library(circlize)
library(RColorBrewer)
library(ComplexHeatmap)
library(gridBase)
# 读取数据
data <- read.csv("COMDEL2_predictions.csv",header=TRUE, row.names= 1,sep=',')
data_matrix <- as.matrix(data)
head(data)
# 移除非数值列
data_matrix <- as.matrix(data[, -c(1)])  #移除seq列
# 逆转行顺序以匹配顺时针方向
rownames(data_matrix) <- rev(rownames(data_matrix))
data_matrix <- data_matrix[nrow(data_matrix):1, ]
head(data_matrix)
# 获取数据矩阵的行数
n_rows <- nrow(data_matrix)
# 自定义颜色梯度
color_mapping <- colorRamp2(c(0, 0.5, 1), c("red", "black", "green"))
# 设置PNG图像设备
#png("predseq_circular_heatmap.png", width = 800, height = 800)
# 设置PDF图像设备
pdf("COMDEL2_circular_heatmap2.pdf", width = 10, height = 10)
#调整圆环首尾间距，开口朝上
circos.par(start.degree = 90, gap.after = c(20))
# 绘制热图
circos.heatmap(data_matrix,col=color_mapping,
dend.side="inside", #聚类放在环形内测,控制行聚类树的方向
track.height = 0.6, #轨道的高度，数值越大圆环越粗
bg.border = "black",#背景边缘颜色
cluster=FALSE) #cluster=TRUE为对行聚类，cluster=FALSE则不显示聚类
# 添加自定义轴线
circos.axis(h = "top", labels.cex = 1.5, major.at = c(1, seq(2, n_rows, by=1)),
minor.ticks = 0, major.tick.length = 0.2,
major.tick.percentage = TRUE)
# 创建一个颜色条图例
lg = Legend(title = "Exp", col_fun = color_mapping,
title_gp = gpar(fontsize = 12, fontface = "bold"),  # 调整标题字体大小和样式
labels_gp = gpar(fontsize = 12),                   # 调整标签字体大小
direction = "vertical",
legend_width = unit(25, "cm"))  # 调整图例宽度
grid.draw(lg)
# 添加列名
circos.track(track.index = get.current.track.index(), panel.fun = function(x, y) {
cn = colnames(data_matrix)
n = length(cn)
for (i in n:1) {  # 注意这里进行了逆序处理
circos.text(CELL_META$cell.xlim[1], y = n - i + 1, labels = cn[i], cex = 1, adj = c(1, 1.5), facing = "inside", niceFacing = TRUE)
}
}, bg.border = NA)
circos.clear()
# 关闭PDF设备
dev.off()
library(circlize)
library(RColorBrewer)
library(ComplexHeatmap)
library(gridBase)
# 读取数据
data <- read.csv("COMDEL2_predictions.csv",header=TRUE, row.names= 1,sep=',')
data_matrix <- as.matrix(data)
head(data)
# 移除非数值列
data_matrix <- as.matrix(data[, -c(1)])  #移除seq列
# 逆转行顺序以匹配顺时针方向
rownames(data_matrix) <- rev(rownames(data_matrix))
data_matrix <- data_matrix[nrow(data_matrix):1, ]
head(data_matrix)
# 获取数据矩阵的行数
n_rows <- nrow(data_matrix)
# 自定义颜色梯度
color_mapping <- colorRamp2(c(0, 0.5, 1), c("red", "black", "green"))
# 设置PNG图像设备
#png("predseq_circular_heatmap.png", width = 800, height = 800)
# 设置PDF图像设备
pdf("COMDEL2_circular_heatmap(new).pdf", width = 10, height = 10)
#调整圆环首尾间距，开口朝上
circos.par(start.degree = 90, gap.after = c(20))
# 绘制热图
circos.heatmap(data_matrix,col=color_mapping,
dend.side="inside", #聚类放在环形内测,控制行聚类树的方向
track.height = 0.6, #轨道的高度，数值越大圆环越粗
bg.border = "black",#背景边缘颜色
cluster=FALSE) #cluster=TRUE为对行聚类，cluster=FALSE则不显示聚类
# 添加自定义轴线
circos.axis(h = "top", labels.cex = 1.5, major.at = c(1, seq(2, n_rows, by=1)),
minor.ticks = 0, major.tick.length = 0.2,
major.tick.percentage = TRUE)
# 创建一个颜色条图例
lg = Legend(title = "Exp", col_fun = color_mapping,
title_gp = gpar(fontsize = 12, fontface = "bold"),  # 调整标题字体大小和样式
labels_gp = gpar(fontsize = 12),                   # 调整标签字体大小
direction = "vertical",
legend_width = unit(25, "cm"))  # 调整图例宽度
grid.draw(lg)
# 添加列名
circos.track(track.index = get.current.track.index(), panel.fun = function(x, y) {
cn = colnames(data_matrix)
n = length(cn)
for (i in n:1) {  # 注意这里进行了逆序处理
circos.text(CELL_META$cell.xlim[1], y = n - i + 1, labels = cn[i], cex = 1, adj = c(1, 1.5), facing = "inside", niceFacing = TRUE)
}
}, bg.border = NA)
circos.clear()
# 关闭PDF设备
dev.off()
library(circlize)
library(RColorBrewer)
library(ComplexHeatmap)
library(gridBase)
# 读取数据
data <- read.csv("P02788.csv",header=TRUE, row.names= 1,sep=',')
data_matrix <- as.matrix(data)
head(data)
# 移除非数值列
data_matrix <- as.matrix(data[, -c(1)])  #移除AA列
# 逆转行顺序以匹配顺时针方向
rownames(data_matrix) <- rev(rownames(data_matrix))
data_matrix <- data_matrix[nrow(data_matrix):1, ]
head(data_matrix)
# 获取数据矩阵的行数
n_rows <- nrow(data_matrix)
# 自定义颜色梯度
color_mapping <- colorRamp2(c(0, 0.5, 1), c("red", "black", "green"))
# 设置PNG图像设备
#png("circular_heatmap.png", width = 800, height = 800)
# 设置PDF图像设备
pdf("P02788_circular_heatmap(new).pdf", width = 10, height = 10)
#绘制环形热图
circos.par(start.degree = 90, gap.after = c(20))  #调整圆环首尾间距，开口朝上
circos.heatmap(data_matrix, col = color_mapping,
dend.side = "inside",
#rownames.side = "outside",
track.height = 0.6,
bg.border = "black",
cluster = FALSE)
# 添加自定义轴线
circos.axis(h = "top", labels.cex = 1.5, major.at = c(1, seq(50, n_rows, by=50)),
minor.ticks = 0, major.tick.length = 0.2,
major.tick.percentage = TRUE)
# 创建一个颜色条图例
lg = Legend(title = "Exp", col_fun = color_mapping,
title_gp = gpar(fontsize = 12, fontface = "bold"),  # 调整标题字体大小和样式
labels_gp = gpar(fontsize = 12),                   # 调整标签字体大小
direction = "vertical",
legend_width = unit(30, "cm"))  # 调整图例宽度
grid.draw(lg)
# 添加列名
circos.track(track.index = get.current.track.index(), panel.fun = function(x, y) {
cn = colnames(data_matrix)
n = length(cn)
for (i in n:1) {  # 注意这里进行了逆序处理
circos.text(CELL_META$cell.xlim[1], y = n - i + 1, labels = cn[i], cex = 1, adj = c(1, 1.5), facing = "inside", niceFacing = TRUE)
}
}, bg.border = NA)
circos.clear()
# 关闭PDF设备
dev.off()
library(circlize)
library(RColorBrewer)
library(ComplexHeatmap)
library(gridBase)
# 读取数据
data <- read.csv("P02788.csv",header=TRUE, row.names= 1,sep=',')
data_matrix <- as.matrix(data)
head(data)
# 移除非数值列
data_matrix <- as.matrix(data[, -c(1)])  #移除AA列
# 逆转行顺序以匹配顺时针方向
#rownames(data_matrix) <- rev(rownames(data_matrix))
#data_matrix <- data_matrix[nrow(data_matrix):1, ]
head(data_matrix)
# 获取数据矩阵的行数
n_rows <- nrow(data_matrix)
# 自定义颜色梯度
color_mapping <- colorRamp2(c(0, 0.5, 1), c("red", "black", "green"))
# 设置PNG图像设备
#png("circular_heatmap.png", width = 800, height = 800)
# 设置PDF图像设备
pdf("P02788_circular_heatmap(new).pdf", width = 10, height = 10)
#绘制环形热图
circos.par(start.degree = 90, gap.after = c(20))  #调整圆环首尾间距，开口朝上
circos.heatmap(data_matrix, col = color_mapping,
dend.side = "inside",
#rownames.side = "outside",
track.height = 0.6,
bg.border = "black",
cluster = FALSE)
# 添加自定义轴线
circos.axis(h = "top", labels.cex = 1.5, major.at = c(1, seq(50, n_rows, by=50)),
minor.ticks = 0, major.tick.length = 0.2,
major.tick.percentage = TRUE)
# 创建一个颜色条图例
lg = Legend(title = "Exp", col_fun = color_mapping,
title_gp = gpar(fontsize = 12, fontface = "bold"),  # 调整标题字体大小和样式
labels_gp = gpar(fontsize = 12),                   # 调整标签字体大小
direction = "vertical",
legend_width = unit(30, "cm"))  # 调整图例宽度
grid.draw(lg)
# 添加列名
circos.track(track.index = get.current.track.index(), panel.fun = function(x, y) {
cn = colnames(data_matrix)
n = length(cn)
for (i in n:1) {  # 注意这里进行了逆序处理
circos.text(CELL_META$cell.xlim[1], y = n - i + 1, labels = cn[i], cex = 1, adj = c(1, 1.5), facing = "inside", niceFacing = TRUE)
}
}, bg.border = NA)
circos.clear()
# 关闭PDF设备
dev.off()
library(circlize)
library(RColorBrewer)
library(ComplexHeatmap)
library(gridBase)
# 读取数据
data <- read.csv("COMDEL2_predictions.csv",header=TRUE, row.names= 1,sep=',')
data_matrix <- as.matrix(data)
head(data)
# 移除非数值列
data_matrix <- as.matrix(data[, -c(1)])  #移除seq列
# 逆转行顺序以匹配顺时针方向
rownames(data_matrix) <- rev(rownames(data_matrix))
data_matrix <- data_matrix[nrow(data_matrix):1, ]
head(data_matrix)
# 获取数据矩阵的行数
n_rows <- nrow(data_matrix)
# 自定义颜色梯度
color_mapping <- colorRamp2(c(0, 0.5, 1), c("red", "black", "green"))
# 设置PNG图像设备
#png("predseq_circular_heatmap.png", width = 800, height = 800)
# 设置PDF图像设备
pdf("COMDEL2_circular_heatmap(new).pdf", width = 10, height = 10)
#调整圆环首尾间距，开口朝上
circos.par(start.degree = 90, gap.after = c(20))
# 绘制热图
circos.heatmap(data_matrix,col=color_mapping,
dend.side="inside", #聚类放在环形内测,控制行聚类树的方向
track.height = 0.6, #轨道的高度，数值越大圆环越粗
bg.border = "black",#背景边缘颜色
cluster=FALSE) #cluster=TRUE为对行聚类，cluster=FALSE则不显示聚类
# 添加自定义轴线
circos.axis(h = "top", labels.cex = 1.5, major.at = c(1, seq(2, n_rows, by=1)),
minor.ticks = 0, major.tick.length = 0.2,
major.tick.percentage = TRUE)
# 创建一个颜色条图例
lg = Legend(title = "Exp", col_fun = color_mapping,
title_gp = gpar(fontsize = 12, fontface = "bold"),  # 调整标题字体大小和样式
labels_gp = gpar(fontsize = 12),                   # 调整标签字体大小
direction = "vertical",
legend_width = unit(25, "cm"))  # 调整图例宽度
grid.draw(lg)
# 添加列名
circos.track(track.index = get.current.track.index(), panel.fun = function(x, y) {
cn = colnames(data_matrix)
n = length(cn)
for (i in n:1) {  # 注意这里进行了逆序处理
circos.text(CELL_META$cell.xlim[1], y = n - i + 1, labels = cn[i], cex = 1, adj = c(1, 1.5), facing = "inside", niceFacing = TRUE)
}
}, bg.border = NA)
circos.clear()
# 关闭PDF设备
dev.off()
library(circlize)
library(RColorBrewer)
library(ComplexHeatmap)
library(gridBase)
# 读取数据
data <- read.csv("COMDEL2_predictions.csv",header=TRUE, row.names= 1,sep=',')
data_matrix <- as.matrix(data)
head(data)
# 移除非数值列
data_matrix <- as.matrix(data[, -c(1)])  #移除seq列
# 逆转行顺序以匹配顺时针方向
rownames(data_matrix) <- rev(rownames(data_matrix))
data_matrix <- data_matrix[nrow(data_matrix):1, ]
head(data_matrix)
# 获取数据矩阵的行数
n_rows <- nrow(data_matrix)
# 自定义颜色梯度
color_mapping <- colorRamp2(c(0, 0.5, 1), c("red", "black", "green"))
# 设置PNG图像设备
#png("predseq_circular_heatmap.png", width = 800, height = 800)
# 设置PDF图像设备
pdf("COMDEL2_circular_heatmap(new).pdf", width = 10, height = 10)
#调整圆环首尾间距，开口朝上
circos.par(start.degree = 90, gap.after = c(20))
# 绘制热图
circos.heatmap(data_matrix,col=color_mapping,
dend.side="inside", #聚类放在环形内测,控制行聚类树的方向
track.height = 0.6, #轨道的高度，数值越大圆环越粗
bg.border = "black",#背景边缘颜色
cluster=FALSE) #cluster=TRUE为对行聚类，cluster=FALSE则不显示聚类
# 添加自定义轴线
circos.axis(h = "top", labels.cex = 1.5, major.at = c(1, seq(2, n_rows, by=1)),
minor.ticks = 0, major.tick.length = 0.2,
major.tick.percentage = TRUE)
# 创建一个颜色条图例
lg = Legend(title = "Exp", col_fun = color_mapping,
title_gp = gpar(fontsize = 12, fontface = "bold"),  # 调整标题字体大小和样式
labels_gp = gpar(fontsize = 12),                   # 调整标签字体大小
direction = "vertical",
legend_width = unit(25, "cm"))  # 调整图例宽度
grid.draw(lg)
# 添加列名
circos.track(track.index = get.current.track.index(), panel.fun = function(x, y) {
cn = colnames(data_matrix)
n = length(cn)
for (i in n:1) {  # 注意这里进行了逆序处理
circos.text(CELL_META$cell.xlim[1], y = n - i + 1, labels = cn[i], cex = 1, adj = c(1, 1.5), facing = "inside", niceFacing = TRUE)
}
}, bg.border = NA)
circos.clear()
# 关闭PDF设备
dev.off()
library(circlize)
library(RColorBrewer)
library(ComplexHeatmap)
library(gridBase)
# 读取数据
data <- read.csv("COMDEL2_predictions.csv",header=TRUE, row.names= 1,sep=',')
data_matrix <- as.matrix(data)
head(data)
# 移除非数值列
data_matrix <- as.matrix(data[, -c(1)])  #移除seq列
# 逆转行顺序以匹配顺时针方向
#rownames(data_matrix) <- rev(rownames(data_matrix))
#data_matrix <- data_matrix[nrow(data_matrix):1, ]
head(data_matrix)
# 获取数据矩阵的行数
n_rows <- nrow(data_matrix)
# 自定义颜色梯度
color_mapping <- colorRamp2(c(0, 0.5, 1), c("red", "black", "green"))
# 设置PNG图像设备
#png("predseq_circular_heatmap.png", width = 800, height = 800)
# 设置PDF图像设备
pdf("COMDEL2_circular_heatmap(new).pdf", width = 10, height = 10)
#调整圆环首尾间距，开口朝上
circos.par(start.degree = 90, gap.after = c(20))
# 绘制热图
circos.heatmap(data_matrix,col=color_mapping,
dend.side="inside", #聚类放在环形内测,控制行聚类树的方向
track.height = 0.6, #轨道的高度，数值越大圆环越粗
bg.border = "black",#背景边缘颜色
cluster=FALSE) #cluster=TRUE为对行聚类，cluster=FALSE则不显示聚类
# 添加自定义轴线
circos.axis(h = "top", labels.cex = 1.5, major.at = c(1, seq(2, n_rows, by=1)),
minor.ticks = 0, major.tick.length = 0.2,
major.tick.percentage = TRUE)
# 创建一个颜色条图例
lg = Legend(title = "Exp", col_fun = color_mapping,
title_gp = gpar(fontsize = 12, fontface = "bold"),  # 调整标题字体大小和样式
labels_gp = gpar(fontsize = 12),                   # 调整标签字体大小
direction = "vertical",
legend_width = unit(25, "cm"))  # 调整图例宽度
grid.draw(lg)
# 添加列名
circos.track(track.index = get.current.track.index(), panel.fun = function(x, y) {
cn = colnames(data_matrix)
n = length(cn)
for (i in n:1) {  # 注意这里进行了逆序处理
circos.text(CELL_META$cell.xlim[1], y = n - i + 1, labels = cn[i], cex = 1, adj = c(1, 1.5), facing = "inside", niceFacing = TRUE)
}
}, bg.border = NA)
circos.clear()
# 关闭PDF设备
dev.off()
View(data_matrix)
View(data)
View(data_matrix)
View(data_matrix)
load("D:/Project/Rproject/COMDEL2/circos_heatmap/.RData")
